proc main
	var x := 0
	var y := 01
	do print {"hello world"}
	x <> y
	x -= 01
	y += 01
	y := 01
	drop y := 0
	drop x := 0
return

proc p
	if a = 0
		do x
	else if a = 01
		do y
	else
		do z
	fi
	fi
return

proc print_file {path: Int}
	var bytes := 07A
	var file := nil
	var buf := nil
	
	do load {path, file}
	do take {file, buf, bytes}
	do print {buf, bytes}
	undo load {path, file}
	
	drop buf := nil
	drop file := nil
	drop bytes := 07A
return

fn succ
	x -> x + 1
end

proc divmod {n: Int, x: Int, div: Int)
    from div = 0
        x -= n
        div += 1
    until x < n
    loop
return
